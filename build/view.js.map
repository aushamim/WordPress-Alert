{"version":3,"file":"view.js","mappings":";;;;;;;;;AAAA;;;;;;SCAA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;ACNA;AACA;AACA;AAC6D;AAE7DA,+DAAK,CAAC,OAAO,EAAE;EACbE,OAAO,EAAE;IACPC,WAAW,EAAEA,CAAA,KAAM;MACjB,MAAMC,OAAO,GAAGH,oEAAU,CAAC,CAAC;MAC5BI,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACtB,CAAC;IACDG,MAAM,EAAEA,CAAA,KAAM;MACZ,MAAMH,OAAO,GAAGH,oEAAU,CAAC,CAAC;MAC5BG,OAAO,CAACI,MAAM,GAAG,CAACJ,OAAO,CAACI,MAAM;IAClC;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,SAAS,EAAEA,CAAA,KAAM;MACf,MAAM;QAAEF;MAAO,CAAC,GAAGP,oEAAU,CAAC,CAAC;MAC/B;MACAI,OAAO,CAACC,GAAG,CAAC,YAAYE,MAAM,EAAE,CAAC;IACnC;EACF;AACF,CAAC,CAAC,C","sources":["webpack://alert/external module \"@wordpress/interactivity\"","webpack://alert/webpack/bootstrap","webpack://alert/webpack/runtime/make namespace object","webpack://alert/./src/view.js"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { store, getContext } from \"@wordpress/interactivity\";\n\nstore(\"alert\", {\n  actions: {\n    updateClass: () => {\n      const context = getContext();\n      console.log(context);\n    },\n    toggle: () => {\n      const context = getContext();\n      context.isOpen = !context.isOpen;\n    },\n  },\n  callbacks: {\n    logIsOpen: () => {\n      const { isOpen } = getContext();\n      // Log the value of `isOpen` each time it changes.\n      console.log(`Is open: ${isOpen}`);\n    },\n  },\n});\n"],"names":["store","getContext","actions","updateClass","context","console","log","toggle","isOpen","callbacks","logIsOpen"],"sourceRoot":""}